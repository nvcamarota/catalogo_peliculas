# Importando archivo clases.py con sus superclases
from clases import Pel√≠cula, Cat√°logoPel√≠cula

# Variable que imprime un mensaje (para usar con errores y excepciones)
mensaje_error = 'Ha ocurrido algo inesperado ‚ùó\n'

# Funci√≥n que imprime el men√∫ de opciones del cat√°logo
def men√∫_cat√°logo():
    print('A continuaci√≥n, te ofrecemos las opciones disponibles:\n')
    print('1. Agregar pel√≠cula(s) ‚ú®')
    print('2. Listar pel√≠culas üìÑ')
    print('3. Eliminar cat√°logo de pel√≠culas ‚ùå')
    print('4. Salir üëã\n')
    
# Funci√≥n que presenta un t√≠tulo principal y un condicional seg√∫n la opci√≥n seleccionada del men√∫ por el usuario
def corriendo_cat√°logo():
    print('\nBienvenido al cat√°logo de pel√≠culas "Ada" üå∏ ¬øQu√© deseas hacer hoy?')
    
    while True:
        try:
            men√∫_cat√°logo()
            opci√≥n = int(input('Seleccione una opci√≥n [1-4]: '))

            # Si opci√≥n es igual a 1, se pide nombre, director, a√±o de lanzamiento y g√©nero de la pel√≠cula
            if opci√≥n == 1:
                nombre_pel√≠cula = input('\nIngresa el nombre de la pel√≠cula: ').title()
                director_pel√≠cula = input(f'Ingresa el director(a) de la pel√≠cula: ').title()
                a√±o_pel√≠cula = int(input(f'Ingresa el a√±o de lanzamiento de la pel√≠cula: '))
                g√©nero_pel√≠cula = input(f'Ingresa el g√©nero de la pel√≠cula: ').title()
                
                # Se crea un cat√°logo (archivo.txt) con el g√©nero ingresado como nombre del cat√°logo y se ingresan la informaci√≥n de pel√≠cula dentro del mismo
                cat√°logo = Cat√°logoPel√≠cula(g√©nero_pel√≠cula)
                pel√≠cula = Pel√≠cula(nombre_pel√≠cula, director_pel√≠cula, a√±o_pel√≠cula, g√©nero_pel√≠cula)
                cat√°logo.agregar_pel√≠cula(pel√≠cula)
                
                print('\n¬°Pel√≠cula agregada con √©xito! üíñ\n')
                continue
                
            # Si opci√≥n es igual a 2, activa el m√©todo listar_pel√≠culas() de la superclase Cat√°logoPel√≠cula
            elif opci√≥n == 2:
                cat√°logo.listar_pel√≠culas()
                continue
            
            # Si opci√≥n es igual a 3, activa el m√©todo eliminar_pel√≠culas() de la superclase Cat√°logoPel√≠cula
            elif opci√≥n == 3:
                cat√°logo.eliminar_pel√≠culas()
                continue
            
            # Si la opci√≥n es 4, imprime un mensaje de despedida y cierra el programa
            elif opci√≥n == 4:
                print('\nGracias por utilizar el cat√°logo de pel√≠culas "Ada" üå∏ Te esperamos nuevamente. ¬°Hasta la pr√≥xima! üëã\n')
                break
                
            # En el caso de que las opciones no sean [1, 2, 3, 4], imprimir√° un mensaje de opci√≥n inv√°lida y reiniciar√° el ciclo mostrando las opciones disponibles
            else:
                print('La opci√≥n ingresada no es v√°lida. Por favor, intente nuevamente üò•')
            break
 
        # Dependiendo el tipo de excepci√≥n que pueda ocurrir durante el programa, esta secci√≥n imprime el mensaje correspondiente para el usuario
        except ValueError:
            print(f'\n{mensaje_error}La opci√≥n ingresada no es v√°lida. Por favor, intente nuevamente üò•\n')
            continue
        except KeyboardInterrupt:
            print(f'\n{mensaje_error}Se ha utilizado el comando de cierre. Cerrando el programa... ¬°Hasta luego! üëã\n')
            break
        except UnboundLocalError:
            print(f'\n{mensaje_error}No hay informaci√≥n en esta secci√≥n a√∫n. Prueba agregando pel√≠culas primero ‚ú®\n')

# Corriendo el programa
corriendo_cat√°logo()
